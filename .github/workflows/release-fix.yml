name: Release Fix

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Версия релиза (например 5)"
        required: true
        type: string

env:
  REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: app
  RELEASE: ${{ inputs.release_version }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '22.x' }
      - run: npm ci
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '22.x' }
      - run: npm ci
      - run: npm run test

  fix-build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: releases/${{ env.RELEASE }}
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Pull latest commits
        run: git pull origin releases/${{ env.RELEASE }}

      - name: Calculate next fix number
        id: seq
        run: |
          LAST=$(git tag --sort=-creatordate \
                 | grep -E "^${RELEASE}_fix[0-9]+$" \
                 | head -n1 | sed -E "s/^${RELEASE}_fix//")
          NEXT=$(( ${LAST:-0} + 1 ))
          echo "id=$NEXT" >> "$GITHUB_OUTPUT"

      - name: Get previous tag
        id: prev
        run: |
          CUR=${RELEASE}_fix${{ steps.seq.outputs.id }}
          PREV=$(git tag --sort=-creatordate \
                 | grep -E "^${RELEASE}(_fix[0-9]+)?$" \
                 | grep -v "^${CUR}$" \
                 | head -n1)
          echo "tag=$PREV" >> "$GITHUB_OUTPUT"

      - name: Build changelog chunk
        id: log
        run: |
          if [ -z "${{ steps.prev.outputs.tag }}" ]; then
            RANGE_LOG=$(git log --oneline)
          else
            RANGE_LOG=$(git log ${{ steps.prev.outputs.tag }}..HEAD --oneline)
          fi
          echo "$RANGE_LOG" > changes.txt
          printf "log<<EOF\n%s\nEOF" "$RANGE_LOG" >> "$GITHUB_OUTPUT"

      - name: Login to Yandex CR
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: oauth
          password: ${{ secrets.YC_CR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE }}_fix${{ steps.seq.outputs.id }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE }}_latest

      - name: Git tag for fix
        run: |
          TAG=${RELEASE}_fix${{ steps.seq.outputs.id }}
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git tag "$TAG"
          git push origin "$TAG"

      - name: Find release Issue number
        id: find_issue
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          NUM=$(gh issue list --state open --search "Release ${RELEASE}" \
                 --json number -q '.[0].number')
          echo "number=$NUM" >> "$GITHUB_OUTPUT"

      - name: Current datetime
        id: now
        run: echo "ts=$(date '+%Y-%m-%d %H:%M:%S')" >> "$GITHUB_OUTPUT"

      - name: Add comment to release Issue
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.find_issue.outputs.number }}
          body: |
            **Fix ${{ env.RELEASE }} #${{ steps.seq.outputs.id }}**  
            **Date:** ${{ steps.now.outputs.ts }}  
            **Author:** @${{ github.actor }}

            **Docker image:**  
            [`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ env.RELEASE }}_fix${{ steps.seq.outputs.id }}`](https://console.cloud.yandex.ru/container-registry/registry/${{ secrets.YC_REGISTRY_ID }})

            **Changes since \`${{ steps.prev.outputs.tag || 'initial' }}\`:**
            ```
            ${{ steps.log.outputs.log }}
            ```
